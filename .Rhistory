print(unique_couples)
# CREATE OUTCOMES -------------------------------------------------------------
households <- households %>%
mutate(
# full time defined as working 35 hours per week, 48 weeks per year
ft_head = work_head >= 1680,
ft_spouse = work_spouse >= 1680,
earn_total = earn_head + earn_spouse,
hw_total = hw_head + hw_spouse,
earn_head_share = earn_head / earn_total,
earn_spouse_share = earn_spouse / earn_total,
hw_head_share = hw_head / hw_total,
hw_spouse_share = hw_spouse / hw_total,
household_type = case_when(
# Husband is sole breadwinner
earn_spouse_share <= .1 & hw_spouse > hw_head ~ "Sole Breadwinner",
# Husband is primary breadwinner
earn_spouse_share > .60  & hw_spouse > hw_head ~ "Primary Breadwinner",
TRUE ~ "Other"
)
) %>%
select(-earn_total, -hw_total, -age_head, -age_spouse, -yob_spouse, -age_diff, -marital_head, -race,
-cc_head, -cc_spouse, -id1968_head, -id1968_spouse, -relation_head, -relation_spouse)
households <- households %>%
mutate(
traditional = if_else(household_type %in% c("Sole Breadwinner", "Primary Breadwinner"), 1, 0),
spouse_earnings = if_else(earn_spouse_share > 0.6, 1, 0),
spouse_housework = if_else(hw_spouse_share > 0.6, 1, 0),
spouse_working = if_else(ft_spouse == TRUE, 1, 0)
)
# ADD EXTENDED FAMILY VARIABLES --------------------------------------------------
outcomes <- c("traditional", "spouse_earnings", "spouse_housework", "spouse_working")
build_parent_outcome <- function(df, outcome_var) {
get_mode <- function(x) {
ux <- unique(x)
ux[which.max(tabulate(match(x, ux)))]
}
# HEAD - PARENT 1
p1 <- df %>%
select(parent1_head, pid) %>%
rename(parent_pid = parent1_head, original_pid = pid) %>%
left_join(df %>% select(pid, !!sym(outcome_var), year) %>%
rename(parent_pid = pid, val = !!sym(outcome_var), yr = year),
by = "parent_pid") %>%
rename(pid_head = original_pid) %>%
group_by(pid_head) %>%
summarise(
val1 = get_mode(val),
yr1 = get_mode(yr),
.groups = "drop"
)
# HEAD - PARENT 2
p2 <- df %>%
select(parent2_head, pid) %>%
rename(parent_pid = parent2_head, original_pid = pid) %>%
left_join(df %>% select(pid, !!sym(outcome_var), year) %>%
rename(parent_pid = pid, val = !!sym(outcome_var), yr = year),
by = "parent_pid") %>%
rename(pid_head = original_pid) %>%
group_by(pid_head) %>%
summarise(
val2 = get_mode(val),
yr2 = get_mode(yr),
.groups = "drop"
)
# Combine Head's Parents
head_combined <- full_join(p1, p2, by = "pid_head") %>%
mutate(head_val = coalesce(val1, val2),
head_year = coalesce(yr1, yr2)) %>%
select(pid_head, head_val, head_year)
# SPOUSE - PARENT 1
sp1 <- df %>%
select(parent1_spouse, pid) %>%
rename(parent_pid = parent1_spouse, original_pid = pid) %>%
left_join(df %>% select(pid, !!sym(outcome_var), year) %>%
rename(parent_pid = pid, val = !!sym(outcome_var), yr = year),
by = "parent_pid") %>%
rename(pid_spouse = original_pid) %>%
group_by(pid_spouse) %>%
summarise(
val1 = get_mode(val),
yr1 = get_mode(yr),
.groups = "drop"
)
# SPOUSE - PARENT 2
sp2 <- df %>%
select(parent2_spouse, pid) %>%
rename(parent_pid = parent2_spouse, original_pid = pid) %>%
left_join(df %>% select(pid, !!sym(outcome_var), year) %>%
rename(parent_pid = pid, val = !!sym(outcome_var), yr = year),
by = "parent_pid") %>%
rename(pid_spouse = original_pid) %>%
group_by(pid_spouse) %>%
summarise(
val2 = get_mode(val),
yr2 = get_mode(yr),
.groups = "drop"
)
# Combine Spouse's Parents
spouse_combined <- full_join(sp1, sp2, by = "pid_spouse") %>%
mutate(spouse_val = coalesce(val1, val2),
spouse_year = coalesce(yr1, yr2)) %>%
select(pid_spouse, spouse_val, spouse_year)
df <- df %>%
left_join(head_combined, by = c("pid" = "pid_head")) %>%
left_join(spouse_combined, by = c("pid" = "pid_spouse")) %>%
mutate(
!!paste0("parent_", outcome_var) := coalesce(head_val, spouse_val),
!!paste0("parent_", outcome_var, "_side") := case_when(
!is.na(head_val) ~ "head",
!is.na(spouse_val) ~ "spouse",
TRUE ~ NA_character_
),
!!paste0("parent_", outcome_var, "_year") := coalesce(head_year, spouse_year)
) %>%
select(-head_val, -spouse_val, -head_year, -spouse_year)
return(df)
}
# Apply the function to all outcomes
for (o in outcomes) {
households <- build_parent_outcome(households, o)
}
# Combine parent years into parent_data_year
households <- households %>%
mutate(
parent_data_year = pmax(
parent_traditional_year,
parent_spouse_earnings_year,
parent_spouse_housework_year,
parent_spouse_working_year,
na.rm = TRUE
)
)
# Create a temporary ID to help track the source
households <- households %>%
mutate(
parent_data_side = case_when(
parent_data_year == parent_traditional_year ~ parent_traditional_side,
parent_data_year == parent_spouse_earnings_year ~ parent_spouse_earnings_side,
parent_data_year == parent_spouse_housework_year ~ parent_spouse_housework_side,
parent_data_year == parent_spouse_working_year ~ parent_spouse_working_side,
TRUE ~ NA_character_
)
)
# Remove interim variables
households <- households %>%
select(-parent_traditional_side, -parent_spouse_earnings_side, -parent_spouse_working_side, -parent_spouse_housework_side,
-parent_traditional_year, -parent_spouse_earnings_year, -parent_spouse_working_year, -parent_spouse_housework_year,
-parent1_head, -parent2_head, -parent1_spouse, -parent2_spouse, -pid_head, -pid_spouse, -sex_head, -sex_spouse, -births)
households <- households %>%
select(-starts_with("grandparent"))
# SAVE OUTPUT -----------------------------------------------------------------
saveRDS(households, here("4_create_outcomes", "output", "analysis.rds"))
rm(hh_limit, hh_limit_sp1, hh_limit_sp2, lookup_p1_spouse, lookup_p2_spouse,
lookup_parent1, lookup_parent2, parent1, parent1_spouse, parent1_spouse_unique, parent2,
parent2_spouse, parent2_spouse_unique, parent2_unique, parent1_unique)
# INPUTS: 4_create_outcomes/src/analysis.R
# OUTPUTS: 5_analysis/output/
# LOAD DATA ------------------------------------------------------------------
analysis <- readRDS(here("4_create_outcomes", "output", "analysis.rds"))
analysis <- analysis %>%
mutate(
own_home = case_when(
own_home == 1 ~ "Home Owner",
own_home == 0 ~ "Renter",
TRUE ~ NA_character_
),
own_home = factor(own_home, levels = c("Renter", "Home Owner")),
edu_cat_spouse = case_when(
edu_cat_spouse == 0 ~ "High School or Less",
edu_cat_spouse == 1 ~ "Some College",
edu_cat_spouse == 2 ~ "Bachelor Degree or More",
TRUE ~ NA_character_
),
edu_cat_spouse = factor(edu_cat_spouse, levels = c("High School or Less", "Some College", "Bachelor Degree or More"))
)
analysis <- analysis[complete.cases(analysis[, c("year", "own_home", "edu_cat_spouse", "num_fam", "child_under5")]), ]
# TABLE 1A AND 1B: DESCRIBE DATA FOR ANALYSIS -----------------------------------
datasummary(
year + num_fam + child_under5 + spouse_working + spouse_earnings + spouse_housework + traditional ~ Mean + SD + Min + Max + N, data = analysis,
title = "Table 1A. Descriptive Statistics",
output = "/Users/amanda/Desktop/categorical_final/5_analysis/output/Table1A_num.docx")
datasummary(
own_home + edu_cat_spouse ~ N + Percent(),
data = analysis, title = "Table 1B. Descriptive Statistics",
output = "/Users/amanda/Desktop/categorical_final/5_analysis/output/Table1B_categ.docx")
# FIGURE 1 - SPECIFY LOGISTIC REGRESSIONS FOR FULL SAMPLE ------------------------
logit_working <- glm(spouse_working ~ year + num_fam + child_under5 + own_home + edu_cat_spouse,
data = analysis,
family = binomial(link = "logit"))
logit_earnings <- glm(spouse_earnings ~ year + num_fam + child_under5 + own_home + edu_cat_spouse,
data = analysis,
family = binomial(link = "logit"))
logit_housework <- glm(spouse_housework ~ year + num_fam + child_under5 + own_home + edu_cat_spouse,
data = analysis,
family = binomial(link = "logit"))
logit_traditional <- glm(traditional ~ year + num_fam + child_under5 + own_home + edu_cat_spouse,
data = analysis,
family = binomial(link = "logit"))
var_names <- c(
'year' = "Survey Year",
'num_fam' = "Family Size",
'child_under5' = "Child < 5", # Reference is no child under 5 living with family
'own_homeHome Owner' = "Home Owner",  # Renter is ref group
'edu_cat_spouseSome College' = "Some College", # High School or Less is reference
'edu_cat_spouseBachelor Degree or More' = "Bachelor Degree or More"
)
modelsummary(
list(
"Spouse Working"     = logit_working,
"Spouse Earning More than Half"    = logit_earnings,
"Spouse Completing More than Half of Housework"   = logit_housework,
"Spouse in Traditional Division of Household Labor" = logit_traditional
),
exponentiate = TRUE,
fmt = "%.3f",  # format to 3 decimal places
gof_map = c("nobs"),
gof_omit = "AIC|BIC|Log.Lik",
stars = TRUE,
title = "Logistic regression for components of the division of household labor",
coef_map = var_names,
notes = "Survey years from 1976 to 2021. Reference category for Home Owner is Renters, for Education is High School or Less",
output = "/Users/amanda/Desktop/categorical_final/5_analysis/output/Figure1.docx"
)
# FIGURE 2 - PLOT PREDICTED PROBABILITIES FOR FULL SAMPLE ------------------------------
preds1 <- avg_predictions(
logit_traditional,
by = c("year", "edu_cat_spouse"),
newdata = datagrid(
year = unique(analysis$year),
edu_cat_spouse = levels(analysis$edu_cat_spouse),
grid_type = "counterfactual"
),
type = "response"
)
plot1 <- ggplot(preds1, aes(x = year, y = estimate, color = edu_cat_spouse)) +
geom_line(linewidth = 1) +
geom_ribbon(
aes(ymin = conf.low, ymax = conf.high, fill = edu_cat_spouse),
alpha = 0.2, color = NA
) +
scale_color_brewer(palette = "Set1", name = "Spouse Education") +
scale_fill_brewer(palette = "Set1", name = "Spouse Education") +
scale_y_continuous(limits = c(0, 1)) +
labs(
x = "Survey Year",
y = "Predicted Probability",
title = "Predicted Probability of Traditional Household"
) +
theme_minimal(base_size = 14)
ggsave("/Users/amanda/Desktop/categorical_final/5_analysis/output/Figure2_traditional_plot.pdf", plot = plot1, width = 8, height = 5)
preds2 <- avg_predictions(
logit_working,
by = c("year", "edu_cat_spouse"),
newdata = datagrid(
year = unique(analysis$year),
edu_cat_spouse = levels(analysis$edu_cat_spouse),
grid_type = "counterfactual"
),
type = "response"
)
plot2 <- ggplot(preds2, aes(x = year, y = estimate, color = edu_cat_spouse)) +
geom_line(linewidth = 1) +
geom_ribbon(
aes(ymin = conf.low, ymax = conf.high, fill = edu_cat_spouse),
alpha = 0.2, color = NA
) +
scale_color_brewer(palette = "Set1", name = "Spouse Education") +
scale_fill_brewer(palette = "Set1", name = "Spouse Education") +
scale_y_continuous(limits = c(0, 1)) +
labs(
x = "Survey Year",
y = "Predicted Probability",
title = "Predicted Probability of Spouse Working"
) +
theme_minimal(base_size = 14)
ggsave("/Users/amanda/Desktop/categorical_final/5_analysis/output/Figure2_working_plot.pdf", plot = plot2, width = 8, height = 5)
preds3 <- avg_predictions(
logit_earnings,
by = c("year", "edu_cat_spouse"),
newdata = datagrid(
year = unique(analysis$year),
edu_cat_spouse = levels(analysis$edu_cat_spouse),
grid_type = "counterfactual"
),
type = "response"
)
plot3 <- ggplot(preds3, aes(x = year, y = estimate, color = edu_cat_spouse)) +
geom_line(linewidth = 1) +
geom_ribbon(
aes(ymin = conf.low, ymax = conf.high, fill = edu_cat_spouse),
alpha = 0.2, color = NA
) +
scale_color_brewer(palette = "Set1", name = "Spouse Education") +
scale_fill_brewer(palette = "Set1", name = "Spouse Education") +
scale_y_continuous(limits = c(0, 1)) +
labs(
x = "Survey Year",
y = "Predicted Probability",
title = "Predicted Probability of Spouse Earning Majority"
) +
theme_minimal(base_size = 14)
ggsave("/Users/amanda/Desktop/categorical_final/5_analysis/output/Figure2_earnings_plot.pdf", plot = plot3, width = 8, height = 5)
preds4 <- avg_predictions(
logit_housework,
by = c("year", "edu_cat_spouse"),
newdata = datagrid(
year = unique(analysis$year),
edu_cat_spouse = levels(analysis$edu_cat_spouse),
grid_type = "counterfactual"
),
type = "response"
)
plot4 <- ggplot(preds4, aes(x = year, y = estimate, color = edu_cat_spouse)) +
geom_line(linewidth = 1) +
geom_ribbon(
aes(ymin = conf.low, ymax = conf.high, fill = edu_cat_spouse),
alpha = 0.2, color = NA
) +
scale_color_brewer(palette = "Set1", name = "Spouse Education") +
scale_fill_brewer(palette = "Set1", name = "Spouse Education") +
scale_y_continuous(limits = c(0, 1)) +
labs(
x = "Survey Year",
y = "Predicted Probability",
title = "Predicted Probability of Spouse Doing Majority of Housework"
) +
theme_minimal(base_size = 14)
ggsave("/Users/amanda/Desktop/categorical_final/5_analysis/output/Figure2_housework_plot.pdf", plot = plot4, width = 8, height = 5)
# TABLE 2A AND 2B - DESCRIBE PARENT DATA FOR ANALYSIS ---------------------------------
analysis2 <- analysis %>%
filter(!is.na(parent_traditional))
unique_couples <- analysis2 %>%
distinct(couple_id) %>%
nrow()
print(unique_couples)
analysis2 <- analysis2[complete.cases(analysis2[, c("year", "own_home", "edu_cat_spouse", "num_fam", "child_under5", "parent_data_side")]), ]
datasummary(
year + num_fam + child_under5 + spouse_working + spouse_earnings + spouse_housework + traditional +
parent_spouse_working + parent_spouse_earnings + parent_spouse_housework + parent_traditional ~ Mean + SD + Min + Max + N, data = analysis2,
title = "Table 2A. Descriptive Statistics",
output = "/Users/amanda/Desktop/categorical_final/5_analysis/output/Table2A_num.docx")
datasummary(
own_home + edu_cat_spouse + parent_data_side ~ N + Percent(),
data = analysis2, title = "Table 2B. Descriptive Statistics",
output = "/Users/amanda/Desktop/categorical_final/5_analysis/output/Table2B_categ.docx")
# FIGURE 3 - SPECIFY LOGISTIC REGRESSIONS FOR PARENT-CHILD SAMPLE ------------------------
logit_working2 <- glm(spouse_working ~ year + num_fam + child_under5 + own_home + edu_cat_spouse + parent_spouse_working,
data = analysis2,
family = binomial(link = "logit"))
logit_earnings2 <- glm(spouse_earnings ~ year + num_fam + child_under5 + own_home + edu_cat_spouse + parent_spouse_earnings,
data = analysis2,
family = binomial(link = "logit"))
logit_housework2 <- glm(spouse_housework ~ year + num_fam + child_under5 + own_home + edu_cat_spouse + parent_spouse_housework,
data = analysis2,
family = binomial(link = "logit"))
logit_traditional2 <- glm(traditional ~ year + num_fam + child_under5 + own_home + edu_cat_spouse + parent_traditional,
data = analysis2,
family = binomial(link = "logit"))
var_names <- c(
'year' = "Survey Year",
'num_fam' = "Family Size",
'child_under5' = "Child < 5", # Reference is no child under 5 living with family
'own_homeHome Owner' = "Home Owner",  # Renter is reference group
'edu_cat_spouseSome College' = "Some College",
'edu_cat_spouseBachelor Degree or More' = "Bachelor Degree or More",
'parent_spouse_working' = "Parent: Spouse Working",
'parent_spouse_earnings' = "Parent: Spouse Earns More",
'parent_spouse_housework' = "Parent: Spouse Does More Housework",
'parent_traditional' = "Parent: Traditional Household"
)
logit_working3 <- glm(spouse_working ~ year + num_fam + child_under5 + own_home + edu_cat_spouse + parent_spouse_working + parent_data_side,
data = analysis2,
family = binomial(link = "logit"))
logit_earnings3 <- glm(spouse_earnings ~ year + num_fam + child_under5 + own_home + edu_cat_spouse + parent_spouse_earnings + parent_data_side,
data = analysis2,
family = binomial(link = "logit"))
logit_housework3 <- glm(spouse_housework ~ year + num_fam + child_under5 + own_home + edu_cat_spouse + parent_spouse_housework + parent_data_side,
data = analysis2,
family = binomial(link = "logit"))
logit_traditional3 <- glm(traditional ~ year + num_fam + child_under5 + own_home + edu_cat_spouse + parent_traditional + parent_data_side,
data = analysis2,
family = binomial(link = "logit"))
var_names_updated <- c(
'year' = "Survey Year",
'num_fam' = "Family Size",
'child_under5' = "Child < 5", # Reference is no child under 5 living with family
'own_homeHome Owner' = "Home Owner",  # Renter is reference group
'edu_cat_spouseSome College' = "Some College",
'edu_cat_spouseBachelor Degree or More' = "Bachelor Degree or More",
'parent_spouse_working' = "Parent: Spouse Working",
'parent_spouse_earnings' = "Parent: Spouse Earns More",
'parent_spouse_housework' = "Parent: Spouse Does More Housework",
'parent_traditional' = "Parent: Traditional Household",
'parent_data_sidespouse' = "Parent: Data from Spouse's Side"
)
# This tests models with and without sides, not included in final paper
modelsummary(
list(
"Spouse Working" = logit_working2,
"Spouse Working with Side" = logit_working3,
"Spouse Earning More" = logit_earnings2,
"Spouse Earning More with Side" = logit_earnings3,
"Spouse Completing More than Half of Housework" = logit_housework2,
"Spouse Completing More than Half of Housework with Side" = logit_housework3,
"Traditional Division of Household Labor" = logit_traditional2,
"Traditional Division of Household Labor with Side" = logit_traditional3
),
exponentiate = TRUE,
fmt = "%.3f",
stars = TRUE,
# gof_map = c("nobs", "AIC", "BIC", "Log.Lik"),  # explicitly include goodness-of-fit stats
title = "Logistic Regressions With and Without Parent Data Side",
coef_map = var_names_updated,
output = "5_analysis/output/TEST_parent_models.docx"
)
# This creates Figure 3
modelsummary(
list(
"Spouse Working" = logit_working3,
"Spouse Earning More than Half" = logit_earnings3,
"Spouse Completing More than Half of Housework" = logit_housework3,
"Traditional Division of Household Labor" = logit_traditional3
),
exponentiate = TRUE,
fmt = "%.3f",
stars = TRUE,
gof_map = c("nobs", "AIC", "BIC", "Log.Lik"),
title = "Logistic Regressions With Parent Data",
coef_map = var_names_updated,
output = "5_analysis/output/Figure3.docx"
)
# FIGURE 4 PLOT PREDICTED PROBABILITIES BASED ON FIGURE 3 ---------------------------
plot5 <- plot_predictions(
model = logit_housework3,
by = c("year", "parent_spouse_housework"),
newdata = datagrid(
parent_spouse_housework = 0:1,
year = unique(analysis2$year),
grid_type = "counterfactual"
),
type = "response",
draw = FALSE
)
p <- ggplot(plot5, aes(x = year, y = estimate, color = factor(parent_spouse_housework))) +
geom_line(size = 1.2) +
geom_ribbon(aes(ymin = conf.low, ymax = conf.high, fill = factor(parent_spouse_housework)), alpha = 0.2, color = NA) +
labs(
title = "Predicted Probability of Spouse Doing Majority of Housework Based on their Parents",
x = "Survey Year",
y = "Predicted Probability",
color = "Mother Did Most Housework",
fill = "Mother Did Most Housework"
) +
theme_classic()
ggsave("5_analysis/output/Figure4_parent_housework.png", p, width = 8, height = 5, dpi = 300)
plot6 <- plot_predictions(
model = logit_housework3,
by = c("parent_data_side", "parent_spouse_housework"),
newdata = datagrid(
parent_spouse_housework = 0:1,
parent_data_side = c("spouse", "head"),
grid_type = "counterfactual"
),
type = "response",
draw = FALSE
)
p <- ggplot(plot6, aes(x = parent_data_side, y = estimate, color = factor(parent_spouse_housework), group = parent_spouse_housework)) +
geom_line(position = position_dodge(width = 0.3), size = 1.2) +
geom_point(position = position_dodge(width = 0.3), size = 2) +
geom_errorbar(aes(ymin = conf.low, ymax = conf.high), width = 0.1, position = position_dodge(width = 0.3)) +
labs(
title = "Predicted Probability of Spouse Doing Majority of Housework Based on their Parents",
x = "Data From Spouse's or Head's Parent",
y = "Predicted Probability",
color = "Mother Did Most Housework",
fill = "Mother Did Most Housework"
) +
theme_classic()
ggsave("5_analysis/output/Figure4_parent_housework_side.png", p, width = 8, height = 5, dpi = 300)
# TABLE 3 - DESCRIPTIVE TABLE OF PARENT / CHILD CHANGE IN HOUSEHOLD STRUCTURE ---------------
tab <- table(analysis2$traditional, analysis2$parent_traditional)
dimnames(tab) <- list(
"Current Traditional" = c("No (0)", "Yes (1)"),
"Parent Traditional"  = c("No (0)", "Yes (1)")
)
tab
# MODEL TESTING - NOT INCLUDED IN FINAL PAPER ------------------------------------------------
# VIF for Initial Models
vif_traditional <- vif(logit_traditional)
print(vif_traditional)
# VIF for logit_working
vif_working <- vif(logit_working)
print(vif_working)
# VIF for logit_earnings
vif_earnings <- vif(logit_earnings)
print(vif_earnings)
# VIF for logit_housework
vif_housework <- vif(logit_housework)
print(vif_housework)
# VIF for Parent Models
vif_traditional <- vif(logit_traditional3)
print(vif_traditional)
# VIF for logit_working3
vif_working <- vif(logit_working3)
print(vif_working)
# VIF for logit_earnings3
vif_earnings <- vif(logit_earnings3)
print(vif_earnings)
# VIF for logit_housework3
vif_housework <- vif(logit_housework3)
print(vif_housework)
